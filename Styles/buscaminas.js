// Buscaminas
// Crear un programa que dado un array 2d permita ingresar una coordenada (representando los Ã­ndices del array), y mostrar si era una casilla vacÃ­a o tenÃ­a una mina. En caso de que tenga una casilla vacÃ­a, debe poder seguir jugando e ingresando casillas. Si descubre todas las casillas vacÃ­as o elige una con una mina, el juego debe terminar, e indicar si perdiÃ³ o ganÃ³. Las minas y casillas vacÃ­as (ocultas y descubiertas) pueden representarse con emojis con con nÃºmeros o letras.
// const tablero = 


// ğŸ“¦ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦

// // Ingrese una coordenada: 0,0
// // La caja estÃ¡ vacÃ­a!

// ğŸ’¨ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦

// // Ingrese una coordenada: 0,1
// // Â¡Oh no!Â¡Has encontrado una bomba!

// ğŸ’¨ ğŸ’¥ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦
// ğŸ“¦ ğŸ“¦ ğŸ“¦

const tablero =
[
    ["X", "O", "O", "O"],
    ["O", "O", "O", "X"],
    ["O", "X", "O", "X"],
    ["X", "X", "O", "X"]
  ]
  
// const tablero =
// [
//   ['ğŸ“¦', 'ğŸ’£', 'ğŸ’£'],
//   ['ğŸ“¦', 'ğŸ“¦', 'ğŸ“¦'],
//   ['ğŸ’£', 'ğŸ“¦', 'ğŸ“¦']
// ] 
  
  let cajasRestantes = 0;
  let escogeBomba = false;
  
  // Obtengo la cantidad de cajas al inicio de la partida
  
  for (let i = 0; i < tablero.length; i++) {
    for (let j = 0; j < tablero[i].length; j++) {
      if (tablero[i][j] === 'ğŸ“¦') {
        cajasRestantes++;
      }
    }
  }
  
  // Bucle del juego
  
  while(cajasRestantes > 0 && !escogeBomba) {
    // Obtengo el tablero, recorriÃ©ndolo y concatenÃ¡ndolo en un string
  
    let tableroActual = '';
    
    for (let i = 0; i < tablero.length; i++) {
      for (let j = 0; j < tablero[i].length; j++) {
        // Si es una bomba muestro una caja, sino lo que haya en esa casilla
        tableroActual += tablero[i][j] === 'ğŸ’£' ? 'ğŸ“¦' : tablero[i][j];
      }
      // Por cada fila inserto una nueva lÃ­nea
      tableroActual += '\n';
    }  
    
    const jugada = prompt(`Ingrese las coordenadas x e y separadas por espacio, por ejemplo: 0 1 \n${tableroActual}`);
    
    const coordenadas = jugada.split(' ');
    const x = coordenadas[0];
    const y = coordenadas[1];
    
    const jugadaValida = tablero[y] !== undefined && tablero[y][x] !== undefined && tablero[y][x] !== 'ğŸ’¨';
    
    if (jugadaValida && tablero[y][x] === 'ğŸ“¦') {
      alert('Â¡Casilla vacÃ­a!Â¡Te has salvado!');
      tablero[y][x] = 'ğŸ’¨';
      cajasRestantes--;
    } 
  
    if (jugadaValida && tablero[y][x] === 'ğŸ’£') {
      tablero[y][x] = 'ğŸ’¥';
      escogeBomba = true;
    } 
    
    if (!jugadaValida) {
      alert('Esa no es una jugada vÃ¡lida');
    }
  }
  
  // Muestro el tablero finalizado con todo descubierto
  let tableroFinal = '';
  
  for (let i = 0; i < tablero.length; i++) {
    for (let j = 0; j < tablero[i].length; j++) {
      tableroFinal += tablero[i][j];
    }
    tableroFinal += '\n';
  }
  
  let resultadoFinal = '';
  
  if (cajasRestantes === 0) {
    resultadoFinal = 'Â¡Felicitaciones! Has ganado.\n'
  }
  
  if (escogeBomba) {
    resultadoFinal = 'Â¡Oh no!Â¡Era una bomba!Â¡Has perdido!\n';
  }
  
  alert(resultadoFinal + tableroFinal);
   


